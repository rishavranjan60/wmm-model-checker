r0 = + r0 r15
r1 = 1
if r0 goto t2+
if r1 goto t1
t2+: r0 = - r0 r1
     if r0 goto bad
     if r1 goto t2
t1:  r0 = 0
     r1 = 1
     r2 = 1
     load RLX #r0 r10
     store RLX #r1 r2
     finish
t2:  store RLX #r0 r2
     load RLX #r1 r11
     if r10 goto check
     finish
check: if r11 goto end
       fail
bad: fail
end: finish

-----
TSO allows you to rearrange the loads before writing if they belong to different addresses

This test simulates a situation where one thread first reads x and then writes y,
and another thread does the opposite (writes x, then reads y)

1) In TSO, it is allowed to transpose load(x) before store(y),
but it is forbidden to observe y = 1 without seeing x = 1

2) If r10 == 0 (the thread has seen x = 0), then r11 must be 0. If it is 1,
it means an invalid situation has occurred, fail is called